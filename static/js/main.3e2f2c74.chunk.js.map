{"version":3,"sources":["Contact.js","About.js","Goodreads.js","App.js","Navbar.js","serviceWorker.js","index.js"],"names":["ContactText","undefined","this","props","email","react_default","a","createElement","className","reactstrap_es","obfuscate_default","Component","Accounts","href","io","Contact","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","firebase","collection","doc","get","then","exists","data","d","setState","Contact_ContactText","Contact_Accounts","About","background-color","Book","key","image_url","get_book_info","title","replace","author","authors","name","book_search_url","concat","console","log","req","XMLHttpRequest","component","addEventListener","event","JSON","parse","responseText","totalItems","itemInfo","items","volumeInfo","imageLinks","thumbnail","open","send","es_image","width","preview","src","GoodreadsList","books","map","book","index","Goodreads_Book","GoodreadsComponent","_Component3","_this2","get_books","inherits","createClass","value","book_url","req_url","parseString","err","result","filtered_books","reviews","GoodreadsResponse","review","today_date","Date","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","read_at","getFullYear","push","return","Goodreads_GoodreadsList","apiKey","authDomain","projectId","App","About_About","Goodreads_GoodreadsComponent","src_Contact_0","SiteNavbar","toggle","bind","assertThisInitialized","isOpen","expand","onClick","navbar","pills","fill","nav","inNavbar","caret","right","header","Boolean","window","location","hostname","match","ReactDOM","render","Navbar_SiteNavbar","document","getElementById","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e2f2c74.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { IoLogoTwitter,\n         IoLogoGithub,\n         IoLogoInstagram,\n         IoLogoSteam, \n         IoLogoLinkedin } from \"react-icons/io\";\nimport { Fade } from 'reactstrap';\nimport Mailto from 'react-protected-mailto';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore'\nimport './Contact.css'\n\nfunction get_email () {\n\n  // Initialize Cloud Firestore through Firebase\n  var db = firebase.firestore();\n  \n  return db.collection(\"email\").doc(\"gmail\").get().then( function (doc) {\n    if (doc.exists) { \n      return doc.data()['address']\n    }\n    else {\n      return \"ERROR\"\n    }\n  })\n}\n\nclass ContactText extends Component {\n  render() {\n    if (this.props.email === undefined) {\n      return (\n        <div className=\"contactText\">\n          <p>\n          </p>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className=\"contactText\">\n          <Fade>\n            <p>\n              You can contact me at <Mailto email={this.props.email} />.\n            </p>\n          </Fade>\n        </div>\n      )\n    }\n\n  }\n}\n\nclass Accounts extends Component {\n  render() {\n    return (\n      <div>\n        <h1>\n          <a className='icon' href='https://www.github.com/pillig'>\n            <IoLogoGithub />\n          </a>\n          <a className='icon' href='https://www.linkedin.com/in/parker-illig'>\n            <IoLogoLinkedin />\n          </a>\n          <a className='icon' href='https://twitter.com/typicalgatsby'>\n            <IoLogoTwitter />\n          </a>\n          <a className='icon' href='https://www.instagram.com/pillig45/'>\n            <IoLogoInstagram />\n          </a>\n          <a className='icon' href='https://steamcommunity.com/id/TheJayGatsby'>\n            <IoLogoSteam />\n          </a>\n        </h1>\n      </div>\n    )\n  }\n}\n\nclass Contact extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      email: undefined\n    }\n    get_email().then( (d) => { this.setState({ email: d }) });\n  }\n  render() {\n    return (\n      <div>\n        <ContactText email={this.state.email}></ContactText>\n        <Accounts></Accounts>\n      </div>\n    )\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div className=\"about\">\n        <p background-color='#565656'>\n          Hey, I'm Parker. <br /><br />\n          I'm from Littleton, Colorado and currently living in Longmont, Colorado.\n          <br/>\n          My main hobbies are movies and gaming, but am constantly finding new things to learn about. \n          <br/>\n          I love studying world history and am currently listening to the Hardcore History and the Revolutions podcast.\n          <br/>\n          I graduated from the University of Colorado Boulder in 2017\n          with a Bachelor's degree in Computer Science & Economics.\n          <br /><br />\n          I'm currently working as a software engineer in Boulder, Colorado.\n          <br /><br />\n          私は日本語を勉強しています。\n        </p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport * as firebase from 'firebase/app';\nimport { parseString } from 'xml2js';\nimport { Image } from 'antd';\nimport 'firebase/firestore'\nimport './Goodreads.css'\n\n\nfunction get_gr_key() {\n  \n  // Initialize Cloud Firestore through Firebase\n  var db = firebase.firestore();\n  \n  return db.collection(\"keys\").doc(\"goodreads\").get().then( function (doc) {\n    if (doc.exists) { \n      return doc.data()['key'];\n    }\n    else {\n      return \"ERROR\"\n    }\n  })\n}\n\n\n\nfunction get_gb_key() {\n  \n  // Initialize Cloud Firestore through Firebase\n  var db = firebase.firestore();\n  \n  return db.collection(\"keys\").doc(\"googlebooks\").get().then( function (doc) {\n    if (doc.exists) { \n      return doc.data()['key'];\n    }\n    else {\n      return \"ERROR\"\n    }\n  })\n}\n\nclass Book extends Component {\n  \n  get_book_info(key) {\n    const title = this.props.data.title[0].replace(/\\s/g, '%20');\n    const author = this.props.data.authors[0].author[0].name[0].replace(/\\s/g, '%20');;\n    const book_search_url = `https://www.googleapis.com/books/v1/volumes?q=intitle:${title}+inauthor:${author}&key=${key}`;\n    console.log(book_search_url);\n    let req = new XMLHttpRequest();\n    let component = this;\n    req.addEventListener(\"load\", function (event) {\n      let data = JSON.parse(this.responseText);\n      if (data.totalItems > 0 ) {\n        let itemInfo = data.items[0].volumeInfo;\n        if (itemInfo.imageLinks.thumbnail) {\n          component.setState({ image_url: itemInfo.imageLinks.thumbnail});\n        }\n      } \n    });\n    req.open(\"GET\", book_search_url);\n    req.send();\n  }\n  \n  \n  constructor (props) {\n    super(props);\n    this.state = {\n      key: undefined,\n      image_url: ''\n    }\n\n    get_gb_key().then( (key) => { \n      this.get_book_info(key);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"book-container\">\n        <div className=\"book-image\">\n          <Image width={200} preview={false} src={this.state.image_url} />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass GoodreadsList extends Component {\n\n  render() {\n    console.log(this.props.books);\n     return (\n      <div className=\"read-book-list\">\n        {this.props.books.map((book, index) => (\n            <Book data={book} key={index}/>\n          ))}\n      </div>\n    )\n  }\n}\n\n\nexport class GoodreadsComponent extends Component {\n    \n  get_books(key) {\n    const user_id = '94308288';\n    const cors_anywhere = 'https://cors-anywhere.herokuapp.com';\n    const book_url = `https://www.goodreads.com/review/list/${user_id}.xml?key=${key}&v=2&shelf=read&sort=date_read`;\n    const req_url = `${cors_anywhere}/${book_url}`;\n    \n    let req = new XMLHttpRequest();\n    let component = this;\n    req.addEventListener(\"load\", function (event) {\n      parseString(this.responseText, function(err, result) {\n        let filtered_books = [];\n        let reviews = result.GoodreadsResponse.reviews[0].review;\n        const today_date = new Date();\n        for (let review of reviews) {\n          let read_date = new Date(review.read_at);\n          if (read_date.getFullYear() === today_date.getFullYear()) {\n            filtered_books.push(review.book[0]);\n          }\n        }\n        component.setState({books: filtered_books});\n      });\n    });\n    req.open(\"GET\", req_url);\n    req.send();\n  }\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      key: undefined,\n      books: []\n    }\n\n    get_gr_key().then( (key) => { \n      this.get_books(key);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"book-list-container\">\n        <div className=\"book-list-header\">Books Read This Year</div>\n        <GoodreadsList books={this.state.books}></GoodreadsList>\n      </div>\n\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Contact from './Contact'\nimport About from './About'\nimport { GoodreadsComponent } from './Goodreads'\nimport * as firebase from 'firebase/app';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyC2Rd5TUOga6pTsoi6-KTKT-Fj5UcQh9Ro',\n  authDomain: 'pillig-personal-site.firebaseapp.com',\n  projectId: 'pillig-personal-site'\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App bg-light\">\n        <div className='row'>\n          <About className='about column left' />\n          <GoodreadsComponent className='goodreads column right' />\n        </div>\n        <div className='footer row'>\n          <Contact className='contact' />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nexport default class SiteNavbar extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.toggle = this.toggle.bind(this);\n      this.state = {\n        isOpen: false\n      };\n    }\n    toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n    render() {\n      return (\n        <div>\n          <Navbar className=\"navbar-dark bg-dark\" expand=\"md\">\n            <NavbarBrand href=\"/\">Parker Illig</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav pills fill className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink href=\"#about\">About</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"#contact\">Contact</NavLink>\n                </NavItem>\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret>\n                    Projects\n                  </DropdownToggle>\n                  <DropdownMenu className='Projects' right>\n                  <DropdownItem header>CSCI 3308 - Software Development & Tools</DropdownItem>\n                    <DropdownItem href='https://github.com/pillig/CSCI3308Project'>Your Yelp</DropdownItem>\n                    <DropdownItem header>CSCI 4830 - Big Data HCI</DropdownItem>\n                    <DropdownItem href='https://github.com/pillig/book'>Book 1</DropdownItem>\n                    <DropdownItem href='https://github.com/pillig/book2'>Book 2</DropdownItem>\n                    <DropdownItem href='https://github.com/pillig/book3'>Book 3</DropdownItem>\n                    <DropdownItem header>CSCI 4502 - Data Mining</DropdownItem>\n                    <DropdownItem href='https://github.com/taylorjandrews/GitCu'>GitCU</DropdownItem>\n                    <DropdownItem header>Personal</DropdownItem>\n                    <DropdownItem href='https://github.com/pillig/back-bot'>Back-bot</DropdownItem> \n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport SiteNavbar from './Navbar';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<SiteNavbar/>, document.getElementById('navbar'));\nReactDOM.render(<App />, document.getElementById('info'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}